{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/auth/login/login.component.css","webpack:///./src/app/components/auth/login/login.component.html","webpack:///./src/app/components/auth/login/login.component.ts","webpack:///./src/app/components/auth/signup/signup.component.css","webpack:///./src/app/components/auth/signup/signup.component.html","webpack:///./src/app/components/auth/signup/signup.component.ts","webpack:///./src/app/components/game/game.component.css","webpack:///./src/app/components/game/game.component.html","webpack:///./src/app/components/game/game.component.ts","webpack:///./src/app/components/manage/manage.component.css","webpack:///./src/app/components/manage/manage.component.html","webpack:///./src/app/components/manage/manage.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/interceptors/auth.interceptor.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/game.service.ts","webpack:///./src/assets/js/script.js","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { SignupComponent } from \"./components/auth/signup/signup.component\";\nimport { LoginComponent } from \"./components/auth/login/login.component\";\nimport { GameComponent } from \"./components/game/game.component\";\nimport { ManageComponent } from \"./components/manage/manage.component\";\nimport { AuthGuard } from \"./guards/auth.guard\";\n\nconst routes: Routes = [\n  { path: \"signup\", component: SignupComponent },\n  { path: \"login\", component: LoginComponent },\n  { path: \"manage\", component: ManageComponent, canActivate: [AuthGuard] },\n  { path: \"\", component: GameComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule {}\n","module.exports = \"/* .errMsg {\\r\\n  color: red;\\r\\n} */\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUciLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIC5lcnJNc2cge1xyXG4gIGNvbG9yOiByZWQ7XHJcbn0gKi9cclxuIl19 */\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"./services/auth.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n  ngOnInit(): void {\n    this.authService.autoLoginAuth();\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { LoginComponent } from \"./components/auth/login/login.component\";\nimport { SignupComponent } from \"./components/auth/signup/signup.component\";\nimport { GameComponent } from \"./components/game/game.component\";\n\nimport { AuthInterceptor } from \"./interceptors/auth.interceptor\";\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\nimport { ManageComponent } from './components/manage/manage.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    GameComponent,\n    NavbarComponent,\n    ManageComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1 class=\\\"text-center\\\">Log in</h1>\\n  <form (submit)=\\\"onSubmit(loginForm)\\\" #loginForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"emailId\\\">Email address</label>\\n      <input\\n        type=\\\"email\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"emailId\\\"\\n        aria-describedby=\\\"emailHelp\\\"\\n        placeholder=\\\"Enter email\\\"\\n        name=\\\"email\\\"\\n        ngModel\\n      />\\n      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\"\\n        >We'll never share your email with anyone else.</small\\n      >\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"passwordId\\\">Password</label>\\n      <input\\n        type=\\\"password\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"passwordId\\\"\\n        placeholder=\\\"Password\\\"\\n        name=\\\"password\\\"\\n        ngModel\\n      />\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Log in!</button>\\n  </form>\\n  <p class=\\\"errMsg\\\">{{ errorMessage }}</p>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  private authMessageListener: Subscription;\n  errorMessage: string;\n  constructor(private authService: AuthService) {}\n  ngOnDestroy(): void {\n    this.authMessageListener.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.authMessageListener = this.authService\n      .getAuthMessageEmitter()\n      .subscribe(message => {\n        this.errorMessage = message;\n      });\n  }\n  onSubmit(form: NgForm) {\n    const email = form.value.email;\n    const password = form.value.password;\n    this.authService.login(email, password);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1 class=\\\"text-center\\\">Sign up</h1>\\n  <form (submit)=\\\"onSubmit(signupForm)\\\" #signupForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"emailId\\\">Email address</label>\\n      <input\\n        type=\\\"email\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"emailId\\\"\\n        aria-describedby=\\\"emailHelp\\\"\\n        placeholder=\\\"Enter email\\\"\\n        name=\\\"email\\\"\\n        ngModel\\n      />\\n      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\"\\n        >We'll never share your email with anyone else.</small\\n      >\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"passwordId\\\">Password</label>\\n      <input\\n        type=\\\"password\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"passwordId\\\"\\n        placeholder=\\\"Password\\\"\\n        name=\\\"password\\\"\\n        ngModel\\n      />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"passwordId2\\\">Password</label>\\n      <input\\n        type=\\\"password\\\"\\n        class=\\\"form-control\\\"\\n        id=\\\"passwordId2\\\"\\n        placeholder=\\\"Password\\\"\\n        name=\\\"password2\\\"\\n        ngModel\\n      />\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign up!</button>\\n  </form>\\n  <p class=\\\"errMsg\\\">{{ errorMessage }}</p>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  errorMessage: string;\n  private authMessageListener: Subscription;\n  constructor(private authService: AuthService) {}\n\n  ngOnDestroy(): void {\n    this.authMessageListener.unsubscribe();\n  }\n  ngOnInit() {\n    this.authMessageListener = this.authService\n      .getAuthMessageEmitter()\n      .subscribe(message => {\n        this.errorMessage = message;\n      });\n  }\n  onSubmit(form: NgForm) {\n    const email = form.value.email;\n    const password = form.value.password;\n    const rePassword = form.value.password2;\n    // //check if email is purdue email\n    // if (!email.includes(\"@purdue.edu\")) {\n    //   this.errorMessage = \"Please use purdue email\";\n    //   return;\n    // }\n    //check if password enter correctly\n    if (!(password === rePassword)) {\n      this.errorMessage = \"Please reenter password\";\n      return;\n    }\n    //sign up\n    this.authService.signup(email, password);\n  }\n}\n","module.exports = \".block {\\r\\n  width: 8rem;\\r\\n  height: 8rem;\\r\\n  margin: auto;\\r\\n  background-color: red;\\r\\n  border: 1px solid white;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  max-width: 60%;\\r\\n}\\r\\n\\r\\n/* #control .container {\\r\\n  max-width: 60%;\\r\\n} */\\r\\n\\r\\n#rgbBoard {\\r\\n  font-size: 2rem;\\r\\n}\\r\\n\\r\\n#head {\\r\\n  color: white;\\r\\n  background-color: blue;\\r\\n  text-transform: uppercase;\\r\\n}\\r\\n\\r\\n/* html {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  height: 100%;\\r\\n} */\\r\\n\\r\\n#control {\\r\\n  background-color: white;\\r\\n  height: 2.5rem;\\r\\n}\\r\\n\\r\\n#control p {\\r\\n  margin-bottom: 0;\\r\\n  /* margin-right: 3rem; */\\r\\n}\\r\\n\\r\\n#control button {\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n#gameStatus {\\r\\n  width: 30rem;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  position: absolute;\\r\\n  top: 400px;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9nYW1lL2dhbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osWUFBWTtFQUNaLHFCQUFxQjtFQUNyQix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTs7R0FFRzs7QUFFSDtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osc0JBQXNCO0VBQ3RCLHlCQUF5QjtBQUMzQjs7QUFFQTs7Ozs7O0dBTUc7O0FBRUg7RUFDRSx1QkFBdUI7RUFDdkIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLE9BQU87QUFDVCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZ2FtZS9nYW1lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmxvY2sge1xyXG4gIHdpZHRoOiA4cmVtO1xyXG4gIGhlaWdodDogOHJlbTtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gIG1heC13aWR0aDogNjAlO1xyXG59XHJcblxyXG4vKiAjY29udHJvbCAuY29udGFpbmVyIHtcclxuICBtYXgtd2lkdGg6IDYwJTtcclxufSAqL1xyXG5cclxuI3JnYkJvYXJkIHtcclxuICBmb250LXNpemU6IDJyZW07XHJcbn1cclxuXHJcbiNoZWFkIHtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcblxyXG4vKiBodG1sIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gIGhlaWdodDogMTAwJTtcclxufSAqL1xyXG5cclxuI2NvbnRyb2wge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIGhlaWdodDogMi41cmVtO1xyXG59XHJcblxyXG4jY29udHJvbCBwIHtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIC8qIG1hcmdpbi1yaWdodDogM3JlbTsgKi9cclxufVxyXG5cclxuI2NvbnRyb2wgYnV0dG9uIHtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4jZ2FtZVN0YXR1cyB7XHJcbiAgd2lkdGg6IDMwcmVtO1xyXG59XHJcblxyXG4uY2FyZCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNDAwcHg7XHJcbiAgbGVmdDogMDtcclxufVxyXG4iXX0= */\"","module.exports = \"<header>\\n  <div id=\\\"head\\\" class=\\\"text-center p-5\\\">\\n    <h1>What color is this?</h1>\\n    <p id=\\\"rgbBoard\\\"></p>\\n  </div>\\n  <div\\n    id=\\\"control\\\"\\n    class=\\\"d-flex justify-content-around align-items-center text-center\\\"\\n  >\\n    <button id=\\\"resetButton\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\">\\n      Next Level\\n    </button>\\n    <p id=\\\"gameStatus\\\"></p>\\n    <div>\\n      <button\\n        [disabled]=\\\"!isAuthenticated\\\"\\n        type=\\\"button\\\"\\n        (click)=\\\"onClick()\\\"\\n        class=\\\"btn btn-link\\\"\\n      >\\n        Save highscore\\n      </button>\\n    </div>\\n  </div>\\n</header>\\n\\n<section id=\\\"gameContent\\\">\\n  <div class=\\\"container mt-5\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-6 col-lg-4\\\">\\n        <div class=\\\"block\\\"></div>\\n      </div>\\n      <div class=\\\"col-6 col-lg-4\\\">\\n        <div class=\\\"block\\\"></div>\\n      </div>\\n      <div class=\\\"col-6 col-lg-4\\\">\\n        <div class=\\\"block\\\"></div>\\n      </div>\\n      <div class=\\\"col-6 col-lg-4\\\">\\n        <div class=\\\"block\\\"></div>\\n      </div>\\n      <div class=\\\"col-6 col-lg-4\\\">\\n        <div class=\\\"block\\\"></div>\\n      </div>\\n      <div class=\\\"col-6 col-lg-4\\\">\\n        <div class=\\\"block\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\\n<div class=\\\"card text-center\\\" style=\\\"width: 18rem;\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Status</h5>\\n    <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Do you love this game? :)</h6>\\n    <p class=\\\"card-text\\\">\\n      Highscore: <span class=\\\"text-primary\\\" id=\\\"highscore\\\">0</span> | Chances:\\n      <span class=\\\"text-primary\\\" id=\\\"chance\\\">3</span>\\n    </p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { executeGame, getHighscore } from \"../../../assets/js/script\";\nimport { GameService } from \"src/app/services/game.service\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-game\",\n  templateUrl: \"./game.component.html\",\n  styleUrls: [\"./game.component.css\"]\n})\nexport class GameComponent implements OnInit, OnDestroy {\n  response: any;\n  isAuthenticated: boolean;\n  private authListener: Subscription;\n  constructor(\n    private gameService: GameService,\n    private authService: AuthService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.authListener.unsubscribe();\n  }\n  ngOnInit() {\n    executeGame();\n    this.isAuthenticated = this.authService.getIsAuthenticated();\n    this.authListener = this.authService\n      .getAuthEmitter()\n      .subscribe(isAuthenticated => {\n        this.isAuthenticated = isAuthenticated;\n      });\n  }\n  onClick() {\n    let highscore = getHighscore();\n    this.gameService.saveHighscore(highscore).subscribe(\n      response => {\n        console.log(response.message);\n      },\n      err => {\n        console.log(err.error.message);\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFuYWdlL21hbmFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2 class=\\\"text-center\\\">Summary</h2>\\n\\n  <table class=\\\"table table-bordered text-center\\\">\\n    <thead class=\\\"table-info\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Count</th>\\n        <th scope=\\\"col\\\">Average</th>\\n        <th scope=\\\"col\\\">Max</th>\\n        <th scope=\\\"col\\\">Min</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr>\\n        <td>{{ summaryInfo.count }}</td>\\n        <td>{{ summaryInfo.average }}</td>\\n        <td>{{ summaryInfo.max }}</td>\\n        <td>{{ summaryInfo.min }}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <h2 class=\\\"text-center\\\">History</h2>\\n  <table class=\\\"table table-hover\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">#</th>\\n        <th scope=\\\"col\\\">Score</th>\\n        <th scope=\\\"col\\\">Date</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let highscore of highscoreArray; let i = index\\\">\\n        <th scope=\\\"row\\\">{{ i + 1 }}</th>\\n        <td>{{ highscore.score }}</td>\\n        <td>{{ highscore.created }}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { GameService } from \"src/app/services/game.service\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-manage\",\n  templateUrl: \"./manage.component.html\",\n  styleUrls: [\"./manage.component.css\"]\n})\nexport class ManageComponent implements OnInit {\n  highscoreArray: any;\n  summaryInfo: any;\n  order: number;\n  constructor(private gameService: GameService) {\n    this.summaryInfo = {};\n    this.order = 1;\n  }\n\n  ngOnInit() {\n    this.gameService.getSummary().subscribe(\n      response => {\n        this.summaryInfo = response.summary;\n      },\n      err => {\n        console.log(err.error.message);\n      }\n    );\n\n    this.gameService\n      .getHighscore()\n      .pipe(\n        map(response => {\n          return {\n            highscoreArray: response.highscoreArray.map(highscore => {\n              return {\n                score: highscore.score,\n                created: new Date(highscore.created)\n              };\n            })\n          };\n        })\n      )\n      .subscribe(\n        postResponse => {\n          this.highscoreArray = postResponse.highscoreArray;\n        },\n        err => {\n          console.log(err.error.message);\n        }\n      );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">R-Guess-B</a>\\n  <button\\n    class=\\\"navbar-toggler\\\"\\n    type=\\\"button\\\"\\n    data-toggle=\\\"collapse\\\"\\n    data-target=\\\"#navbarNavAltMarkup\\\"\\n    aria-controls=\\\"navbarNavAltMarkup\\\"\\n    aria-expanded=\\\"false\\\"\\n    aria-label=\\\"Toggle navigation\\\"\\n  >\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div\\n    *ngIf=\\\"!isAuthenticated\\\"\\n    class=\\\"collapse navbar-collapse\\\"\\n    id=\\\"navbarNavAltMarkup\\\"\\n  >\\n    <div class=\\\"navbar-nav ml-auto\\\">\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/login\\\">Log In</a>\\n    </div>\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/signup\\\">Sign Up</a>\\n    </div>\\n  </div>\\n  <div\\n    *ngIf=\\\"isAuthenticated\\\"\\n    class=\\\"collapse navbar-collapse\\\"\\n    id=\\\"navbarNavAltMarkup\\\"\\n  >\\n    <div class=\\\"navbar-nav ml-auto\\\">\\n      <a\\n        class=\\\"nav-item nav-link\\\"\\n        [ngClass]=\\\"isManage ? 'active' : ''\\\"\\n        routerLink=\\\"/manage\\\"\\n        >Manage</a\\n      >\\n    </div>\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" (click)=\\\"logout()\\\">Log Out</a>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { Subscription } from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  isAuthenticated: boolean;\n  isManage: boolean;\n  private authListener: Subscription;\n\n  ngOnDestroy(): void {\n    this.authListener.unsubscribe();\n  }\n  constructor(private authService: AuthService, private router: Router) {\n    this.isManage = false;\n  }\n\n  ngOnInit() {\n    //this.isManage = this.router.url === \"/manage\" ? true : false;\n    this.isAuthenticated = this.authService.getIsAuthenticated();\n    this.authListener = this.authService\n      .getAuthEmitter()\n      .subscribe(isAuthenticated => {\n        this.isAuthenticated = isAuthenticated;\n      });\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","import {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router\r\n} from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.authService.getIsAuthenticated();\r\n    if (!isAuth) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    //now all the request make from client will have the token of the user\r\n    const token = this.authService.getToken();\r\n    const request = req.clone({\r\n      headers: req.headers.set(\"Authorization\", \"Bearer \" + token)\r\n    });\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { Subject } from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\nconst BACKEND_URL = environment.apiUrl + \"/user\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n  private token: string;\n  private isAuthenticated: boolean;\n  private userId: string;\n  private authEmitter = new Subject<boolean>();\n  private authMessageEmitter = new Subject<string>();\n  private timerInterval: any;\n  constructor(private http: HttpClient, private router: Router) {}\n  signup(email: string, password: string) {\n    this.http\n      .post<{ message: string }>(BACKEND_URL + \"/signup\", {\n        email,\n        password\n      })\n      .subscribe(\n        () => {\n          this.router.navigate([\"/login\"]);\n        },\n        err => {\n          this.authMessageEmitter.next(err.error.message);\n        }\n      );\n  }\n  login(email: string, password: string) {\n    this.http.post<any>(BACKEND_URL + \"/login\", { email, password }).subscribe(\n      response => {\n        this.token = response.token;\n        if (this.token) {\n          const expirationTime = response.expiresIn;\n          //automatically log out after a period of time\n          this.setAuthTimer(expirationTime);\n          this.isAuthenticated = true;\n          this.userId = response.userId;\n          this.authEmitter.next(true);\n          const timeNow = new Date();\n          const absoluteExpirationDate = new Date(\n            timeNow.getTime() + expirationTime * 1000\n          );\n          console.log(absoluteExpirationDate);\n          //save auth info so user do not need to log in every time\n          this.saveAuthInfo(\n            this.userId,\n            absoluteExpirationDate.toISOString(),\n            this.token\n          );\n        }\n        this.router.navigate([\"/\"]);\n      },\n      err => {\n        this.authMessageEmitter.next(err.error.message);\n        this.authEmitter.next(false);\n      }\n    );\n  }\n  autoLoginAuth() {\n    //auto log user in until time expired\n    const authInfo = this.getAuthInfo();\n    if (!authInfo) {\n      return;\n    }\n    const expirationDate = new Date(authInfo.expirationDate);\n    const timeNow = new Date();\n    const expiresIn = expirationDate.getTime() - timeNow.getTime();\n    if (expiresIn > 0) {\n      this.token = authInfo.token;\n      this.userId = authInfo.userId;\n      this.isAuthenticated = true;\n      this.authEmitter.next(true);\n      this.setAuthTimer(expiresIn / 1000);\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.userId = null;\n    this.isAuthenticated = false;\n    this.authEmitter.next(false);\n    this.clearAuthInfo();\n    clearInterval(this.timerInterval);\n    this.http.get<{ message: string }>(BACKEND_URL + \"/logout\").subscribe(\n      response => {\n        console.log(response.message);\n      },\n      err => {\n        console.log(err.error.message);\n      }\n    );\n    //this.router.navigate([\"/\"]);\n  }\n\n  private setAuthTimer(duration: number) {\n    //auto log out for a duration\n    this.timerInterval = setInterval(() => {\n      this.logout();\n      alert(\"You have been logged out\");\n    }, duration * 1000);\n  }\n\n  private clearAuthInfo() {\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"expirationDate\");\n    localStorage.removeItem(\"token\");\n  }\n  private saveAuthInfo(userId: string, expirationDate: string, token: string) {\n    //save authentication info to locl storage\n    localStorage.setItem(\"userId\", userId);\n    localStorage.setItem(\"expirationDate\", expirationDate);\n    localStorage.setItem(\"token\", token);\n  }\n  private getAuthInfo() {\n    //get authentication info from local storage\n    const userId = localStorage.getItem(\"userId\");\n    const expirationDate = localStorage.getItem(\"expirationDate\");\n    const token = localStorage.getItem(\"token\");\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      userId,\n      expirationDate,\n      token\n    };\n  }\n  getToken() {\n    return this.token;\n  }\n  getAuthEmitter() {\n    return this.authEmitter.asObservable();\n  }\n  getIsAuthenticated() {\n    return this.isAuthenticated;\n  }\n  getAuthMessageEmitter() {\n    return this.authMessageEmitter.asObservable();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\n\nconst BACKEND_URL = environment.apiUrl + \"/game\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class GameService {\n  constructor(private http: HttpClient) {}\n\n  saveHighscore(score: number) {\n    return this.http.post<{ message: string }>(BACKEND_URL + \"/score\", {\n      score\n    });\n  }\n  getHighscore() {\n    return this.http.get<any>(BACKEND_URL + \"/score\");\n  }\n  getSummary() {\n    return this.http.get<any>(BACKEND_URL + \"/summary\");\n  }\n}\n","let highscore = 0;\r\nexport function executeGame() {\r\n  let chanceLeft = 3;\r\n  let choosenRGB;\r\n  const numBlocks = 6;\r\n  let canReset = true;\r\n\r\n  //DOM declaration\r\n  var rgbBoard = document.querySelector(\"#rgbBoard\");\r\n  var blocks = document.querySelectorAll(\".block\");\r\n  var head = document.querySelector(\"#head\");\r\n  var gameStatus = document.querySelector(\"#control p\");\r\n  var resetButton = document.querySelector(\"#resetButton\");\r\n  var highscoreStatus = document.querySelector(\"#highscore\");\r\n  var chanceStatus = document.querySelector(\"#chance\");\r\n\r\n  function generateColor() {\r\n    var redColor = Math.floor(Math.random() * 256);\r\n    var greenColor = Math.floor(Math.random() * 256);\r\n    var blueColor = Math.floor(Math.random() * 256);\r\n    var arrayColor = [redColor, greenColor, blueColor];\r\n    return arrayColor;\r\n  }\r\n\r\n  function getRGBColor() {\r\n    var arrayColor = generateColor();\r\n    var rgbCodeStr =\r\n      \"rgb(\" +\r\n      arrayColor[0] +\r\n      \", \" +\r\n      arrayColor[1] +\r\n      \", \" +\r\n      arrayColor[2] +\r\n      \")\";\r\n    return rgbCodeStr;\r\n  }\r\n\r\n  function generateOrder(size) {\r\n    return Math.floor(Math.random() * size);\r\n  }\r\n\r\n  function guessCorrect() {\r\n    head.style.background = choosenRGB;\r\n    gameStatus.textContent = \"Congratulation!\";\r\n    canReset = true;\r\n    //make all the blocks unclickable\r\n    this.removeEventListener(\"click\", guessCorrect);\r\n    blocks.forEach(function(block) {\r\n      //set all blocks = correct color\r\n      block.style.background = choosenRGB;\r\n      block.removeEventListener(\"click\", guessWrong);\r\n    });\r\n    highscore++;\r\n    setHighscore();\r\n  }\r\n  function setHighscore() {\r\n    highscoreStatus.textContent = highscore;\r\n  }\r\n  function setChance() {\r\n    chanceStatus.textContent = chanceLeft;\r\n  }\r\n\r\n  function guessWrong() {\r\n    this.style.background = \"white\";\r\n    gameStatus.textContent = \"Try Again!\";\r\n    chanceLeft--;\r\n    setChance();\r\n    if (chanceLeft <= 0) {\r\n      chanceLeft = 3;\r\n      highscore = 0;\r\n      setHighscore();\r\n      setChance();\r\n      alert(\"You lose\");\r\n      canReset = true;\r\n      resetGame();\r\n    }\r\n    //this.classList.add = \"d-none\";\r\n  }\r\n\r\n  function resetGame() {\r\n    if (canReset == false) {\r\n      alert(\"Please finish this level first\");\r\n      return;\r\n    }\r\n    //renew chances every time it wins\r\n    chanceLeft = 3;\r\n    setChance();\r\n    canReset = false;\r\n    blocks.forEach(function(block) {\r\n      block.removeEventListener(\"click\", guessCorrect);\r\n      block.removeEventListener(\"click\", guessWrong);\r\n    });\r\n\r\n    gameStatus.textContent = \"\";\r\n    head.style.background = \"blue\";\r\n\r\n    //generate new correct block order\r\n    let blockCorrectOrder = generateOrder(numBlocks);\r\n    //generate new correct block color using old var\r\n    choosenRGB = getRGBColor();\r\n    //set new context\r\n    rgbBoard.textContent = choosenRGB;\r\n\r\n    assignRGB(blockCorrectOrder);\r\n  }\r\n\r\n  function assignRGB(blockCorrectOrder) {\r\n    for (var i = 0; i < numBlocks; i++) {\r\n      var randomRGB = getRGBColor();\r\n      if (i == blockCorrectOrder) {\r\n        blocks[i].style.background = choosenRGB;\r\n        blocks[i].addEventListener(\"click\", guessCorrect);\r\n        continue;\r\n      }\r\n      blocks[i].style.background = randomRGB;\r\n      blocks[i].addEventListener(\"click\", guessWrong);\r\n    }\r\n  }\r\n\r\n  resetGame();\r\n\r\n  resetButton.addEventListener(\"click\", resetGame);\r\n}\r\nexport function getHighscore() {\r\n  return Number(highscore);\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiUrl: \"http://localhost:3000/api\",\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}