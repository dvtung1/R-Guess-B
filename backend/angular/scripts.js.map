{"version":3,"sources":["webpack:///src/assets/js/script.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"scripts.js","sourcesContent":["let highscore = 0;\r\nexport function executeGame() {\r\n  let chanceLeft = 3;\r\n  let choosenRGB;\r\n  const numBlocks = 6;\r\n  let canReset = true;\r\n\r\n  //DOM declaration\r\n  var rgbBoard = document.querySelector(\"#rgbBoard\");\r\n  var blocks = document.querySelectorAll(\".block\");\r\n  var head = document.querySelector(\"#head\");\r\n  var gameStatus = document.querySelector(\"#control p\");\r\n  var resetButton = document.querySelector(\"#resetButton\");\r\n  var highscoreStatus = document.querySelector(\"#highscore\");\r\n  var chanceStatus = document.querySelector(\"#chance\");\r\n\r\n  function generateColor() {\r\n    var redColor = Math.floor(Math.random() * 256);\r\n    var greenColor = Math.floor(Math.random() * 256);\r\n    var blueColor = Math.floor(Math.random() * 256);\r\n    var arrayColor = [redColor, greenColor, blueColor];\r\n    return arrayColor;\r\n  }\r\n\r\n  function getRGBColor() {\r\n    var arrayColor = generateColor();\r\n    var rgbCodeStr =\r\n      \"rgb(\" +\r\n      arrayColor[0] +\r\n      \", \" +\r\n      arrayColor[1] +\r\n      \", \" +\r\n      arrayColor[2] +\r\n      \")\";\r\n    return rgbCodeStr;\r\n  }\r\n\r\n  function generateOrder(size) {\r\n    return Math.floor(Math.random() * size);\r\n  }\r\n\r\n  function guessCorrect() {\r\n    head.style.background = choosenRGB;\r\n    gameStatus.textContent = \"Congratulation!\";\r\n    canReset = true;\r\n    //make all the blocks unclickable\r\n    this.removeEventListener(\"click\", guessCorrect);\r\n    blocks.forEach(function(block) {\r\n      //set all blocks = correct color\r\n      block.style.background = choosenRGB;\r\n      block.removeEventListener(\"click\", guessWrong);\r\n    });\r\n    highscore++;\r\n    setHighscore();\r\n  }\r\n  function setHighscore() {\r\n    highscoreStatus.textContent = highscore;\r\n  }\r\n  function setChance() {\r\n    chanceStatus.textContent = chanceLeft;\r\n  }\r\n\r\n  function guessWrong() {\r\n    this.style.background = \"white\";\r\n    gameStatus.textContent = \"Try Again!\";\r\n    chanceLeft--;\r\n    setChance();\r\n    if (chanceLeft <= 0) {\r\n      chanceLeft = 3;\r\n      highscore = 0;\r\n      setHighscore();\r\n      setChance();\r\n      alert(\"You lose\");\r\n      canReset = true;\r\n      resetGame();\r\n    }\r\n    //this.classList.add = \"d-none\";\r\n  }\r\n\r\n  function resetGame() {\r\n    if (canReset == false) {\r\n      alert(\"Please finish this level first\");\r\n      return;\r\n    }\r\n    //renew chances every time it wins\r\n    chanceLeft = 3;\r\n    setChance();\r\n    canReset = false;\r\n    blocks.forEach(function(block) {\r\n      block.removeEventListener(\"click\", guessCorrect);\r\n      block.removeEventListener(\"click\", guessWrong);\r\n    });\r\n\r\n    gameStatus.textContent = \"\";\r\n    head.style.background = \"blue\";\r\n\r\n    //generate new correct block order\r\n    let blockCorrectOrder = generateOrder(numBlocks);\r\n    //generate new correct block color using old var\r\n    choosenRGB = getRGBColor();\r\n    //set new context\r\n    rgbBoard.textContent = choosenRGB;\r\n\r\n    assignRGB(blockCorrectOrder);\r\n  }\r\n\r\n  function assignRGB(blockCorrectOrder) {\r\n    for (var i = 0; i < numBlocks; i++) {\r\n      var randomRGB = getRGBColor();\r\n      if (i == blockCorrectOrder) {\r\n        blocks[i].style.background = choosenRGB;\r\n        blocks[i].addEventListener(\"click\", guessCorrect);\r\n        continue;\r\n      }\r\n      blocks[i].style.background = randomRGB;\r\n      blocks[i].addEventListener(\"click\", guessWrong);\r\n    }\r\n  }\r\n\r\n  resetGame();\r\n\r\n  resetButton.addEventListener(\"click\", resetGame);\r\n}\r\nexport function getHighscore() {\r\n  return Number(highscore);\r\n}\r\n"],"sourceRoot":""}